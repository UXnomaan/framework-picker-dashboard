[{"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/App.js":"1","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/data/frameworks.js":"2","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/api/api.js":"3","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkCard/GithubMetric/GithubMetric.jsx":"4","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkCard/FrameworkCard.jsx":"5","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkDetails/FrameworkDetails.jsx":"6","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/errors/ErrorBoundary.jsx":"7","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/api/queries.js":"8","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkDetails/FrameworkDetails.styles.js":"9"},{"size":1321,"mtime":1612202671635,"results":"10","hashOfConfig":"11"},{"size":709,"mtime":1612203210121,"results":"12","hashOfConfig":"11"},{"size":185,"mtime":1612197978124,"results":"13","hashOfConfig":"11"},{"size":373,"mtime":1612197978124,"results":"14","hashOfConfig":"11"},{"size":2204,"mtime":1612201173535,"results":"15","hashOfConfig":"11"},{"size":1292,"mtime":1612204718662,"results":"16","hashOfConfig":"11"},{"size":515,"mtime":1612197978125,"results":"17","hashOfConfig":"11"},{"size":426,"mtime":1612204059346,"results":"18","hashOfConfig":"11"},{"size":118,"mtime":1612197978125,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"vkjwqv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/App.js",["39"],"import React, { useState, useCallback } from \"react\";\n\n// Grommet\nimport { Box, Button, Layer } from \"grommet\";\n\n// Components\nimport FrameworkCard from \"./components/FrameworkCard/FrameworkCard\";\nimport FrameworkDetails from \"./components/FrameworkDetails/FrameworkDetails\";\nimport ErrorBoundary from \"./components/errors/ErrorBoundary\";\n\n// Data\nimport { frameworks } from \"./data/frameworks\";\n\nfunction App() {\n  const [isTableShowing, setIsTableShowing] = useState(false);\n\n  return (\n    <Box\n      fill\n      background=\"brand\"\n      direction=\"column\"\n      justify=\"center\"\n      align=\"center\"\n      gap=\"large\"\n    >\n      <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"medium\">\n        {frameworks.map((framework) => (\n          <FrameworkCard\n            key={framework.name}\n            {...framework}\n          />\n        ))}\n      </Box>\n      <Button\n        primary\n        color=\"accent-1\"\n        label=\"View Details\"\n        onClick={() => setIsTableShowing(true)}\n      />\n      {isTableShowing ? (\n        <Layer\n          onEsc={() => setIsTableShowing(false)}\n          onClickOutside={() => setIsTableShowing(false)}\n        >\n          <ErrorBoundary>\n            <FrameworkDetails />\n          </ErrorBoundary>\n        </Layer>\n      ) : null}\n    </Box>\n  );\n}\n\nexport default App;\n","/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/data/frameworks.js",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/api/api.js",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkCard/GithubMetric/GithubMetric.jsx",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkCard/FrameworkCard.jsx",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkDetails/FrameworkDetails.jsx",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/errors/ErrorBoundary.jsx",[],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/api/queries.js",["40"],"/Users/adamslaker/projects/netlify/framework-picker-dashboard/src/components/FrameworkDetails/FrameworkDetails.styles.js",[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":38},{"ruleId":"41","severity":1,"message":"45","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":20},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'frameworks' is defined but never used."]